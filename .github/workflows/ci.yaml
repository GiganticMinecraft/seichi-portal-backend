name: Checking
on:
  push:

env:
  image_name: ghcr.io/giganticminecraft/seichi-poral-backend
  RUST_BACKTRACE: full

jobs:
  rustfmt:
    name: rustfmt check
    runs-on: ubuntu-latest
    env:
      RUST_VERSION: "$(grep -oP '(?<=channel = \").*(?=\")' rust-toolchain.toml)"
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Setup rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
          target: ${{ matrix.cross-target }}
          components: rustfmt
      - name: Rustfmt check
        run: cargo fmt --all -- --check
        working-directory: ./server

  lint-and-test:
    needs: [ rustfmt ]
    name: Lint and test server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: echo "RUST_VERSION=$(sed -n 's/channel = "\(.*\)\"/\1/p' rust-toolchain.toml)" >> $GITHUB_ENV
      - uses: actions/cache@v4
        with:
          key: rust-${{ env.RUST_VERSION }}-build-${{ hashFiles('**/Cargo.toml') }}
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/.cache/sccache/
            target/
          restore-keys: |
            rust-${{ env.RUST_VERSION }}-build-
            rust-${{ env.RUST_VERSION }}-
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: clippy, rustfmt
      - uses: mozilla-actions/sccache-action@v0.0.9
        with:
          version: "v0.9.1"
      - run: |
          echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
      - name: Configure Cache Env
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Cargo build
        run: cargo build
        working-directory: ./server

      - uses: LoliGothick/clippy-check@v0.3.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          deny: warnings
          working-directory: ./server

      - name: Cargo test
        run: cargo test --all-features
        working-directory: ./server
